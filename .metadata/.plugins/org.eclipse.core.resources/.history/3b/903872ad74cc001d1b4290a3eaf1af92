package com.lec.ex.service;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Enumeration;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.lec.ex.dao.BoardDao;
import com.lec.ex.dto.BoardDto;
import com.lec.ex.dto.UserDto;
import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;

public class BoardReplyService implements Service {

	@Override
	public void execute(HttpServletRequest request, HttpServletResponse response) {
		// 파일첨부 로직 + 파라미터들 받아 DB에 join
		String path = request.getRealPath("fileBoardUp");
		int maxSize = 1024*1024*10; // 최대업로드 사이즈는 10M
		String boardFileName = "";
		try {
			MultipartRequest mRequest = new MultipartRequest(request, path, maxSize, "utf-8", new DefaultFileRenamePolicy());
			Enumeration<String> params = mRequest.getFileNames();
			String param = params.nextElement();
			boardFileName = mRequest.getFilesystemName(param);
			// userId, boardTitle, boardContent,  fileName, boardIp
			HttpSession httpSession = request.getSession();
			UserDto user = (UserDto)httpSession.getAttribute("user");
			if(user ==null) {
				request.setAttribute("boaredResult", "로그인 후에만 답글쓰기 가능");
				return;
			}
			String userId = user.getUserId();
			String boardTitle = mRequest.getParameter("boardTitle");
			String boardContent = mRequest.getParameter("boardContent");
			String boardIp = request.getRemoteAddr();
			Integer boardGroup = null;
			Integer boardStep = null;
			Integer boardIndent = null;
			String strBoardGroup = mRequest.getParameter("boardGroup");
			String strBoardStep = mRequest.getParameter("boardStep");
			String strBoardIndent = mRequest.getParameter("boardIndent");
			if (strBoardGroup != null && !strBoardGroup.trim().isEmpty()) {
				boardGroup = Integer.parseInt(strBoardGroup);
			}
			if (strBoardStep != null && !strBoardStep.trim().isEmpty()) {
				boardStep = Integer.parseInt(strBoardStep);
			}
			if (strBoardIndent != null && !strBoardIndent.trim().isEmpty()) {
				boardIndent = Integer.parseInt(strBoardIndent);
			}
			BoardDao boardDao = BoardDao.getInstance();
			BoardDto boardDto = new BoardDto(0, userId, user.getUserName
